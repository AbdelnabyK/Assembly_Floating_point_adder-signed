STACK0 EQU 0x00000100
	AREA STACK, NOINIT, READWRITE, ALIGN=3
Stackmem space STACK0
		
		AREA RESET, DATA, READONLY
			EXPORT __Vectors
__Vectors
		
		DCD Stackmem + STACK0
		DCD Reset_Handler
			
		ALIGN
		
		AREA |.text|, CODE, READONLY, ALIGN=2
	ENTRY
		
		EXPORT Reset_Handler
	
Reset_Handler
;Code here  R0 and R1 has the numbers and the sign ; R2 and R3 has exp; R4, R5 has mant; TEST CASES: POS: 0x40500000 & 0x3FC00000 ; TEST : POS 0X3FC00000  & NEG 0XC0500000
	LDR R0,=0X3FC00000
	LDR R1,=0XC0500000
	SUB R12,R1,R0
	LSR R12,R12,#31
	CMP R12,#0
	BEQ EXT
	MOV R12,R0
	MOV R0,R1
	MOV R1,R12 ;made R0>R1
	MOV R12,#0 ;CLEAR R12
EXT	LSL R2,R0,#1
	LSR R2,R2,#24
	LSL R3,R1,#1
	LSR R3,R3,#24
	LSL R4,R0,#9
	LSR R4,R4,#9
	LSL R5,R1,#9
	LSR R5,R5,#9
	LSR R0,R0,#31
	LSR R1,R1,#31	;extracted M,E and sign
	ADD R4,R4,#8388608
	ADD R5,R5,#8388608 ;ADD HIDDEN 1
	CMP R0,R1	;ADD OR SUB?
	BNE MINUS
	;IT IS ADDITION AND N1>N2
	SUB R12,R2,R3
	LSR R5,R5,R12
	ADD R4,R4,R5
	CMP R4,#16777216
	LSRGE R4,R4,#1
	ADDGE R2,R2,#1
	B DON
MINUS	;N1 IS NEG, N2 IS POS
	LSL R2,R2,#23 
	LSL R3,R3,#23 
	LSL R4,R4,#9
	LSR R4,R4,#9
	LSL R5,R5,#9
	LSR R5,R5,#9
	ORR R2,R2,R4
	ORR R3,R3,R5 ;COMPINE EX WITH M TO REDUCE BRANCHING
	ADD R4,R4,#8388608
	ADD R5,R5,#8388608 	;ADD HIDDEN 1 AGAIN
	CMP R2,R3	
	BGT FLIPP 
	BEQ ZEROO
	;N1 IS NEG, N2 IS POS,N2>N1
	LSR R2,R2,#23
	LSR R3,R3,#23
	SUB R12,R3,R2
	ADD R2,R2,R12
	LSR R4,R4,R12
	MVN R4,R4 
	ADD R4,R4,#1 ; 2'S COMP
	ADD R4,R4,R5
	MOV R0,R1
	B DON 
FLIPP	; N1 IS NEG, N2 IS POS,N1>N2
	LSR R2,R2,#23
	LSR R3,R3,#23
	SUB R12,R2,R3
	LSR R5,R5,R12
	MVN R4,R4
	ADD R4,R4,#1 ; 2'S COMP
	ADD R4,R5,R4
	MVN R4,R4
	ADD R4,R4,#1 ;GET POS
LOOP	CMP R4,#8388608
	BGE DON
	LSL R4,R4,#1
	SUB R2,R2,#1
	B LOOP
ZEROO	MOV R0,#0
	MOV R2,#0
	MOV R4,#0
DON	LSL R0,R0,#31
	LSL R2,R2,#23 
	LSL R4,R4,#9
	LSR R4,R4,#9
	ORR R2,R2,R4
	ORR R0,R0,R2
	MOV R3,#0
	MOV R5,#0
	CMP R3,R5
	END
